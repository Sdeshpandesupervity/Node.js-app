trigger:
  branches:
    include:
      - master


pool:
  vmImage: 'ubuntu-latest'

variables:
  SONARQUBE_SERVER: 'https://sonar-dev.supervity.ai'
  SONARQUBE_TOKEN: 'sqa_18ca7a4a75620b175378099dc7730a1eddf2a3b6'  # Store this securely in Azure DevOps
  SONAR_PROJECT_KEY: 'test'
  SONAR_PROJECT_NAME: 'test'
  SONAR_PROJECT_VERSION: '1.0'

jobs:
  - job: Build
    displayName: Build and Push the image to ACR
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: Docker@2
        inputs:
          containerRegistry: 'cai-yaml-test'
          repository: 'test'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile'
  - job: SonarQubeAnalysis
    displayName: 'SonarQube Analysis'
    steps:
      - checkout: self
        fetchDepth: 0  # Disable shallow fetch for better analysis relevance
  
      - task: NodeTool@0
        inputs:
          versionSpec: '14.x'  # Specify your Node.js version
          checkLatest: true
        displayName: 'Install Node.js'

      - script: |
          npm install
        displayName: 'Install Dependencies'
      - task: SonarQubePrepare@6
        inputs:
          SonarQube: 'sonarqube'  # Name of the SonarQube service connection in Azure DevOps
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: '$(SONAR_PROJECT_KEY)'
          cliProjectName: '$(SONAR_PROJECT_NAME)'
          cliSources: '.'
          extraProperties: |
            sonar.projectVersion=$(SONAR_PROJECT_VERSION)
            sonar.host.url=$(SONARQUBE_SERVER)
            sonar.login=$(SONARQUBE_TOKEN)
            sonar.nodejs.version=14.x
        displayName: 'Prepare SonarQube Analysis'

      - task: SonarQubeAnalyze@6
        displayName: 'Run SonarQube Analysis'

      - task: SonarQubePublish@6
        inputs:
          pollingTimeoutSec: '300'
        displayName: 'Publish Quality Gate Result'
